const WebSocket = require("ws");

// const coordinates = [
//     [-35.223204, -5.811374],
//     [-35.223309, -5.811687],
//     [-35.223105, -5.811995],
//     [-35.223208, -5.812235],
//     [-35.225957, -5.811236],
//     [-35.224946, -5.808496],
//     [-35.2071, -5.815047],
//     [-35.205985, -5.815336],
//     [-35.204044, -5.810092],
//     [-35.202569, -5.810675]
// ];
const coordinates = [[-5.81115819135047, -35.20461298990358],
[-5.810996632751025, -35.20446864046248],
[-5.810637613475165, -35.204360378381644],
[-5.810134986104354, -35.20414385421999],
[-5.809596456280581, -35.20392733005834],
[-5.809057925941825, -35.20374689325696],
[-5.808483493012872, -35.20356645645558],
[-5.807944961609915, -35.20342210701448],
[-5.80737052745393, -35.203241670253206],
[-5.807532087185626, -35.203223626532974],
[-5.807262821001715, -35.20362058753611],
[-5.807101261284801, -35.20394537377858],
[-5.806760190619149, -35.20463103362382],
[-5.806490924158313, -35.20531669346906],
[-5.806203706458248, -35.2060564843547],
[-5.805880586370676, -35.207012799402],
[-5.805467710433588, -35.20787889604861],
[-5.8051804922119885, -35.20823976965137],
[-5.804606055329644, -35.20858259957399],
[-5.804193178458835, -35.20910586629799],
[-5.803744398908403, -35.20935847781991],
[-5.802864789953167, -35.209123909978125],
[-5.802595521631274, -35.20906977893771],
[-5.802110838327823, -35.20903369157744],
[-5.80180566714522, -35.2089254294966]
]

let index = coordinates.length - 1;
const server = new WebSocket.Server({ port: 8080 });

server.on("connection", (ws) => {
    console.log("New client connected!");

    ws.send("Welcome to the WebSocket server!");

    // Enviar coordenadas periodicamente
    const interval = setInterval(() => {
        if (index === 0) {
            index = coordinates.length - 1; // Reiniciar a lista de coordenadas quando atingir o final
        }
        const currentCoordinate = coordinates[index--];
        ws.send(JSON.stringify({ latitude: currentCoordinate[0], longitude: currentCoordinate[1] }));
    }, 1000);

    // Limpar o intervalo quando o cliente se desconectar
    ws.on("close", () => {
        clearInterval(interval);
        console.log("Client disconnected");
    });

    ws.on("message", (message) => {
        console.log("Received: ", message);
        ws.send(`Your message: ${message}`);
    });
});
